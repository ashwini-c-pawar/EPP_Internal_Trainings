
ABSTRACTION AND POLYMORPHISM
============================

Encapsulation:-- Information hiding.
Abstraction:-- Implementation hiding

Example: Complex logic is in the circuit board which is encapsulated in a touchpad and a nice interface(buttons) is provided to abstract it out to the user.

Abstraction hides unwanted information or the process of particular operation 
Encapsulation puts the data safe from the outside world by binding the data and codes into single unit.

Abstraction is supported using interface and abstract class 
Encapsulation is supported using access modifiers especially private so that we can access them only through getters and setters

Abstraction --> Shows what part of functionality.
Encapsulation --> Hides the how part of the functionality.

Abstraction -->Helps avoid repetitive code

Queries:
is Abstraction a process of generalization .. ??
Is self encapsulation same as encapsulation


ABSTRACTION:
------------
abstract class Fruit{
abstract void taste();
}

class apple extends Fruit{
 void taste() {
  System.out.println("Tastes good");
 }
 
 public static void main(String argu[]) {
  fruit f = new apple();
  f.taste();
  }
 
}

Encapsulation
-------------
class Employee{
 private String name;
 private int age;
    
 public String getname(){
     return name;
 }

 public int getage(){
     return age;
 }

 public void setage(int a){
     age = a;
 }
 
public void setname(string b){
      name = b;
 }

    
}
public class Main{
    public static void main(String args[]){
         Employee obj = new Employee();
         obj.setname("AAAAA");
         obj.setage(32);
         System.out.println("Employee Name: " + obj.getname());
         System.out.println("Employee Age: " + obj.getage());
} 
}


Encapsulation + Abstraction
---------------------------

abstract class Employee{
private float salary;
public String name;
private int age;
    
 public int getage(){
     return age;
 }
public string getname()
{
 return name;
}
 public salary getsalary(){
     return salaey;
 }

 public void setage(int a){
     age = a;
 }

public abstract void emp(){
system.out.println("Name is:" +name)

}

public void setsalary(float b){
     salary = b;
 }
public abstract void emp();
    
}

 abstract Class Person{

public abstract void emp(){
system.out.println("Name:" +name)

}

}
public class Main{
    public static void main(String args[]){
        Employee obj = new Employee();
        obj.setsalary(23000.0);
        obj.setage(23);
	Employee e= new Person();
	e.setname("AAAAA")
	e.emp();
        System.out.println("Salary: " + obj.getsalary());
        System.out.println("Employee Age: " + obj.getage());
} 
}